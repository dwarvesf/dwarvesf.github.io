<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tool on Dwarves Foundation</title><link>https://memo.d.foundation/tags/tool/</link><description>Recent content in Tool on Dwarves Foundation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>han@d.foundation (Han Ngo)</managingEditor><webMaster>han@d.foundation (Han Ngo)</webMaster><copyright>Â© 2023 Dwarves Foundation.</copyright><lastBuildDate>Mon, 22 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://memo.d.foundation/tags/tool/index.xml" rel="self" type="application/rss+xml"/><item><title>Approaches To Manage Concurrent Workloads Like Worker Pools And Pipelines</title><link>https://memo.d.foundation/memo/approaches-to-manage-concurrent-workloads-like-worker-pools-and-pipelines/</link><pubDate>Mon, 22 May 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/memo/approaches-to-manage-concurrent-workloads-like-worker-pools-and-pipelines/</guid><description>Introduction Go provides us great and convenient ways to write concurrent programs with high performance to execute tasks concurrently (perhaps in parallel if the program is run on a machine with multiple physical cores, GOMAXPROCS are automatically set to the number of physical cores of the machine that the program is running on)
While the Go concurrency primitives are easy to work with (it means it&amp;rsquo;s easy to create the Go concurrency primitives and start using them), but they don&amp;rsquo;t prevent us the developers to write something incorrectly or buggy.</description></item><item><title>Accelerate Project Initiation With Advanced Nextjs Boilerplate React Toolkit</title><link>https://memo.d.foundation/memo/accelerate-project-initiation-with-advanced-nextjs-boilerplate-react-toolkit/</link><pubDate>Mon, 03 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/memo/accelerate-project-initiation-with-advanced-nextjs-boilerplate-react-toolkit/</guid><description>Accelerate Project Initiation with Advanced NextJS-Boilerplate &amp;amp; React-Toolkit In today&amp;rsquo;s fast-paced world of software development, project initiation can often be a challenging and time-consuming process, with teams facing issues such as inconsistent code quality, slow setup times, and suboptimal workflows. To address these obstacles and streamline the project initiation process, we&amp;rsquo;ve developed two powerful libraries, NextJS-Boilerplate and React-Toolkit, that can help teams get started quickly and efficiently.
Challenges in Project Initiation Software development teams often face several challenges during project initiation, including:</description></item><item><title>Istio</title><link>https://memo.d.foundation/memo/istio/</link><pubDate>Sun, 09 Jun 2019 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/memo/istio/</guid><description>Istio is an implementation of the Service mesh architecture, which is a network of microservices that interactive with each other to form an application. Besides Istio, there are several concept applying service mesh architecture such as Linkerd, Consul.
Service mesh vs API gateway Service mesh has been really a hot term recently, comparing to another microservice architecture, API gateway, which is considered simpler and a more mature solution. Therefore before digging into Istio, it is necessary to have a comparison between Service mesh and API gateway, to find out the pros/cons and the use case of each architecture, thus have a better overview for Istio.</description></item></channel></rss>