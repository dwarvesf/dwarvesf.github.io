<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Practice on Dwarves Foundation</title><link>https://note.d.foundation/tags/practice/</link><description>Recent content in Practice on Dwarves Foundation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>han@d.foundation (Han Ngo)</managingEditor><webMaster>han@d.foundation (Han Ngo)</webMaster><copyright>© 2023 Dwarves Foundation.</copyright><lastBuildDate>Mon, 22 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://note.d.foundation/tags/practice/index.xml" rel="self" type="application/rss+xml"/><item><title>Approaches To Manage Concurrent Workloads Like Worker Pools And Pipelines</title><link>https://note.d.foundation/memo/approaches-to-manage-concurrent-workloads-like-worker-pools-and-pipelines/</link><pubDate>Mon, 22 May 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/memo/approaches-to-manage-concurrent-workloads-like-worker-pools-and-pipelines/</guid><description>Introduction Go provides us great and convenient ways to write concurrent programs with high performance to execute tasks concurrently (perhaps in parallel if the program is run on a machine with multiple physical cores, GOMAXPROCS are automatically set to the number of physical cores of the machine that the program is running on)
While the Go concurrency primitives are easy to work with (it means it&amp;rsquo;s easy to create the Go concurrency primitives and start using them), but they don&amp;rsquo;t prevent us the developers to write something incorrectly or buggy.</description></item><item><title>Unit Testing Best Practices In Golang</title><link>https://note.d.foundation/memo/unit-testing-best-practices-in-golang/</link><pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/memo/unit-testing-best-practices-in-golang/</guid><description>One common issue we often tackle in backend engineering is writing test cases. In this article, we will explore the techniques for crafting effective tests in Go, discussing best practices for writing unit tests and utilizing mocks to achieve better isolation. Although our primary focus lies in unit testing-related practices, it is important to note that Golang also supports integration testing. We will also tackle the subject of integration testing in a future article, where we will examine the details and best practices for integration testing in Golang.</description></item><item><title>Data Analyst In Retail Trading</title><link>https://note.d.foundation/memo/data-analyst-in-retail-trading/</link><pubDate>Mon, 29 Aug 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/memo/data-analyst-in-retail-trading/</guid><description>I am Bach Phuong and I work at Dwarves Foundation as a Data Analyst, helping partner companies realize insights and understand their business better.
What does a Data Analyst do? A Data Analyst is a gatekeeper for an organization’s data. They are tasked to explore, transform, aggregate data to create business insights from that data to then create reports to stakeholders. Thanks to these reports, companies can make more informed business decisions.</description></item><item><title>The Dwarves Runs By Ideas</title><link>https://note.d.foundation/memo/the-dwarves-runs-by-ideas/</link><pubDate>Mon, 07 Sep 2020 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/memo/the-dwarves-runs-by-ideas/</guid><description>Minimal human intervention Our operations runs on four branches: Account for client happiness arrangement - PeopleOps for resource allocation - Human Resource for recruitment and employee experience, &amp;amp; Communication for info transmission across the platforms.
It&amp;rsquo;s a bit different from other operations flows out there. But we do it on purpose.
We figure a small team is easier to share perspectives, update on what&amp;rsquo;s happening and discuss different work aspects.</description></item><item><title>Aarrr Framework In A Nutshell</title><link>https://note.d.foundation/memo/aarrr-framework-in-a-nutshell/</link><pubDate>Tue, 30 Jun 2020 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/memo/aarrr-framework-in-a-nutshell/</guid><description>We could find a bunch of AARRR frameworks definition across the internet (Thanks to Google). I don’t intend to create another one here.
Today I just want to share the simplest definition of this framework and how we have done here at Dwarves. It is a jumping-off point to brainstorming what AARRR does, and why it’s the important step that needs to be done.
What is AARRR framework by the way AARRR is a revenue-driven funnel, what makes it different than other funnels?</description></item><item><title>How People Matter Should Work</title><link>https://note.d.foundation/memo/how-people-matter-should-work/</link><pubDate>Wed, 24 Jun 2020 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/memo/how-people-matter-should-work/</guid><description>We get to read many articles these days that states &amp;lsquo;People are the Core of the Business&amp;rsquo;, or &amp;lsquo;Why People are the Key to Success&amp;rsquo;, or something like that. Something that polishes the importance of human to the company. Something that emphasizes how HR should do their best to nurture the talents.
But here&amp;rsquo;s the funny thing. Most of those talks drive the audience back to tips. How to make people happy.</description></item><item><title>Be Careful With Your Code Splitting Setup</title><link>https://note.d.foundation/memo/be-careful-with-your-code-splitting-setup/</link><pubDate>Mon, 17 Jul 2017 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/memo/be-careful-with-your-code-splitting-setup/</guid><description>I thought I have been through hell this evening. Took me 6 hours debugging in the deep dark of hell. Oh right.
The app I have been worked on was a mobile-first PWA built with React, so naturally there is an infinite/virtual list somewhere in the app.
When I created Explore component, which basically a version of ItemList— an infinite list using react-virtualized — with list items inside, sounds good and all.</description></item></channel></rss>