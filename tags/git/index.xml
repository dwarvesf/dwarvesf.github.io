<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Git on Dwarves Foundation</title><link>https://note.d.foundation/tags/git/</link><description>Recent content in Git on Dwarves Foundation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>han@d.foundation (Han Ngo)</managingEditor><webMaster>han@d.foundation (Han Ngo)</webMaster><copyright>Â© 2023 Dwarves Foundation.</copyright><lastBuildDate>Sat, 10 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://note.d.foundation/tags/git/index.xml" rel="self" type="application/rss+xml"/><item><title>Gitflow Pull Request</title><link>https://note.d.foundation/memo/gitflow-pull-request/</link><pubDate>Sat, 10 Apr 2021 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/memo/gitflow-pull-request/</guid><description>Git is one of the most popular source control. Github is one platform built over the top of Git and well adapted by lots of companies. Knowing the right workflow will help to increase the team productivity. In this post, I will try to cover some of the best practices from the community and the way we applied them at Dwarves Foundation.
Git branching mode Source: https://nvie.com/posts/a-successful-git-branching-model/
In sort, you will organize your repository into 5 types of branches:</description></item><item><title>Git Commit Message Convention</title><link>https://note.d.foundation/memo/git-commit-message-convention/</link><pubDate>Tue, 06 Apr 2021 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/memo/git-commit-message-convention/</guid><description>I bumped into an article a few days ago. It was short and simple, related enough to make me wonder if we have the same thing in the team. How a git commit message should look like.
From the article The blog post states out what a typical git commit message looks like
&amp;lt;type&amp;gt;(&amp;lt;scope&amp;gt;): &amp;lt;subject&amp;gt; in which
type: stands for the main action scope: stands for the codebase section subject: short description on the commit and</description></item></channel></rss>