<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dcos on Dwarves Foundation</title><link>https://memo.d.foundation/tags/dcos/</link><description>Recent content in Dcos on Dwarves Foundation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>han@d.foundation (Han Ngo)</managingEditor><webMaster>han@d.foundation (Han Ngo)</webMaster><copyright>© 2023 Dwarves Foundation.</copyright><lastBuildDate>Sun, 11 Jun 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://memo.d.foundation/tags/dcos/index.xml" rel="self" type="application/rss+xml"/><item><title>Dcos Series Part 5 Gitlab</title><link>https://memo.d.foundation/memo/dcos-series-part-5---gitlab/</link><pubDate>Sun, 11 Jun 2017 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/memo/dcos-series-part-5---gitlab/</guid><description>Gitlab an open source developer tool (like Github) that allows you to host git repositories, review code, track issues, host Docker images and perform continuous integration, and it is very compatible for a small team wit CE version.
DC/OS supports us to run our own private Gitlab to manage source code in house. This article will let you know how to setup Gitlab with HTTPS.
Installing You just need to go Universe &amp;gt; Packages and choose Gitlab to install it with Advanced Installation.</description></item><item><title>Dcos Series Part 4 Deploy Simple Application With Backend Database</title><link>https://memo.d.foundation/memo/dcos-series-part-4---deploy-simple-application-with-backend-database/</link><pubDate>Sat, 10 Jun 2017 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/memo/dcos-series-part-4---deploy-simple-application-with-backend-database/</guid><description>Create an Application with Golang First of all, we will go with Golang because Go is easy to implement backend server and deploy in 1 min. So we will have a few code to initialize todolist application that provide GET tasks.
func main() { // connect DB db, err := gorm.Open(&amp;quot;postgres&amp;quot;, fmt.Sprintf(&amp;quot;user=%v password=%v host=%v dbname=%v sslmode=disable&amp;quot;, os.Getenv(&amp;quot;DB_USER&amp;quot;), os.Getenv(&amp;quot;DB_PASSWORD&amp;quot;), os.Getenv(&amp;quot;DB_HOST&amp;quot;), os.Getenv(&amp;quot;DB_NAME&amp;quot;))) if err != nil { panic(fmt.Sprintf(&amp;quot;Failed to open sql connection: %v&amp;quot;, err.</description></item><item><title>Dcos Series Part 3 Service Discovery And Load Balancing</title><link>https://memo.d.foundation/memo/dcos-series-part-3---service-discovery-and-load-balancing/</link><pubDate>Wed, 17 May 2017 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/memo/dcos-series-part-3---service-discovery-and-load-balancing/</guid><description>The Mesosphere Datacenter Operating System (DCOS) provides useful tooling for service discovery and load balancing. One of the primary tools is Marathon Load Balancer, which will be the focus of this post.
After you boot a DCOS cluster, all tasks can be discovered by using Mesos-DNS. Discovery through DNS, however, has some limitations that include:
DNS does not identify service ports, unless you use an SRV query; most apps are not able to use SRV records “out of the box.</description></item><item><title>Dcos Series Part 2 Deploy Simple Applications</title><link>https://memo.d.foundation/memo/dcos-series-part-2---deploy-simple-applications/</link><pubDate>Fri, 05 May 2017 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/memo/dcos-series-part-2---deploy-simple-applications/</guid><description>There are so many interesting things in DC/OS GUI (Dashboard with useful metrics/status from all nodes, Services tab help us to know which application/service is running on which node, its status, etc.).
In this article, we will try to deploy applications to DC/OS and run it.
Universe packages The Universe tab shows all of the available DC/OS services from package repositories. You can install packages from the DC/OS Universe with a single click.</description></item><item><title>Dcos Series Part 1 Quick Look Installation</title><link>https://memo.d.foundation/memo/dcos-series-part-1---quick-look-installation/</link><pubDate>Thu, 04 May 2017 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/memo/dcos-series-part-1---quick-look-installation/</guid><description>What is DC/OS ? DC/OS - Data center OS is based on the production proven Apache Mesos distributed systems kernel, combining years of real-life experience with best practices for building and running modern applications in production.
A DC/OS cluster is composed of three types of nodes: masters, private agents, and public agents.
There are some nodes that we will talk about:
Bootstrap: we use this node to setup some configurations, to initialize a file which is called dcos_generate_config.</description></item></channel></rss>