<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>k8s on Dwarves Foundation</title><link>https://note.d.foundation/tags/k8s/</link><description>Recent content in k8s on Dwarves Foundation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>han@d.foundation (Han Ngo)</managingEditor><webMaster>han@d.foundation (Han Ngo)</webMaster><copyright>© 2023 Dwarves Foundation.</copyright><lastBuildDate>Wed, 30 Oct 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://note.d.foundation/tags/k8s/index.xml" rel="self" type="application/rss+xml"/><item><title>Kubernetes Helm 101</title><link>https://note.d.foundation/memo/kubernetes-helm-101/</link><pubDate>Wed, 30 Oct 2019 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/memo/kubernetes-helm-101/</guid><description>In recent years, Kubernetes has exploded tremendously. At the same time, it creates new communities including ecosystems that make it easier to develop and deploy complex applications. If Kubernetes means the shipman of the ship, then Helm is the steering wheel of that shipman in the career of every DevOps and Developer.
Helm is a Package Manager for Kubernetes, analogous to NPM or YARN. However, it’s not just the Package Manager, it is also a Deployment Management for Kubernetes.</description></item><item><title>What Is Kubernetes</title><link>https://note.d.foundation/memo/what-is-kubernetes/</link><pubDate>Fri, 27 Sep 2019 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/memo/what-is-kubernetes/</guid><description>What is Kubernetes Kubernetes is a portable, extensible, open-source platform for managing containerized workloads and services, that facilitates both declarative configuration and automation. It has a large, rapidly growing ecosystem. Kubernetes services, support, and tools are widely available.
Traditional Deployment Era Early on, organizations ran applications on physical servers. There was no way to define resource boundaries for applications in a physical server, and this caused resource allocation issues. For example, if multiple applications run on a physical server, there can be instances where one application would take up most of the resources, and as a result, the other applications would underperform.</description></item></channel></rss>