<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Backend on Dwarves Foundation</title><link>https://memo.d.foundation/tags/backend/</link><description>Recent content in Backend on Dwarves Foundation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>han@d.foundation (Han Ngo)</managingEditor><webMaster>han@d.foundation (Han Ngo)</webMaster><copyright>© 2023 Dwarves Foundation.</copyright><lastBuildDate>Thu, 07 Mar 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://memo.d.foundation/tags/backend/index.xml" rel="self" type="application/rss+xml"/><item><title>Partners Network</title><link>https://memo.d.foundation/consulting/partners-network/</link><pubDate>Thu, 07 Mar 2024 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/consulting/partners-network/</guid><description>We seek for Partners, individuals and companies likewise, to develop a co-creation system driven by mutual purposes and interests.
With our average deal size at $30,000, a partner can generate at least $2,400 per project. Commission is paid from project start, every month until project end.
Partner perks Partnering with Dwarves is not just a collaboration, it’s a strategic investment in trust, network and business growth. Being our partners mean sharing opportunities, resources, connections and scaling up together.</description></item><item><title>Message Queues And Streaming Platforms Eg Kafka Nats Rabbitmq</title><link>https://memo.d.foundation/memo/message-queues-and-streaming-platforms-eg-kafka-nats-rabbitmq/</link><pubDate>Thu, 04 May 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/memo/message-queues-and-streaming-platforms-eg-kafka-nats-rabbitmq/</guid><description>At Dwarves Foundation, we host a few learning sessions to understand some of the technology around us. We regularly pick up topics we find interesting to dive deeper into to understand them better and present our findings. One topic that piqued my interest was the use of message brokers, due to how prevalent their use case is in our projects.
In today&amp;rsquo;s digital world, the exchange of information between different systems and applications is becoming increasingly important.</description></item><item><title>Lessons Learned From Concurrency Practices In Blockchain Projects</title><link>https://memo.d.foundation/memo/lessons-learned-from-concurrency-practices-in-blockchain-projects/</link><pubDate>Mon, 17 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/memo/lessons-learned-from-concurrency-practices-in-blockchain-projects/</guid><description>This article covers some lessons learned from working on blockchain projects, with a team that was often optimistic about transparent distributed concurrency. Our API server was scaled to 3 replicas, which introduces a lot of concurrency nuance and race conditions in our app. This post mentions one of those problems, which we tackled with advisory locks. All examples are written in Go.
Introduction This story comes from a few projects with our teams optimistically setting more than one replica for a server on Kubernetes (heck, this still happens now).</description></item><item><title>Unit Testing Best Practices In Golang</title><link>https://memo.d.foundation/memo/unit-testing-best-practices-in-golang/</link><pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://memo.d.foundation/memo/unit-testing-best-practices-in-golang/</guid><description>One common issue we often tackle in backend engineering is writing test cases. In this article, we will explore the techniques for crafting effective tests in Go, discussing best practices for writing unit tests and utilizing mocks to achieve better isolation. Although our primary focus lies in unit testing-related practices, it is important to note that Golang also supports integration testing. We will also tackle the subject of integration testing in a future article, where we will examine the details and best practices for integration testing in Golang.</description></item></channel></rss>