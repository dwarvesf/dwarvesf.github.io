<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tech Radar on Dwarves Foundation</title><link>https://note.d.foundation/radar/</link><description>Recent content in Tech Radar on Dwarves Foundation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>han@d.foundation (Han Ngo)</managingEditor><webMaster>han@d.foundation (Han Ngo)</webMaster><copyright>© 2023 Dwarves Foundation.</copyright><lastBuildDate>Fri, 13 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://note.d.foundation/radar/index.xml" rel="self" type="application/rss+xml"/><item><title>Devcontainers</title><link>https://note.d.foundation/radar/devcontainers/</link><pubDate>Fri, 13 Oct 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/devcontainers/</guid><description>Description → Devcontainers are a feature of Visual Studio Code that allow developers to use a container as a full-featured development environment. A devcontainer.json file in your project tells VS Code how to access (or create) a development container with a well-defined tool and runtime stack. This container can be used to run an application or to separate tools, libraries, or runtimes needed for working with a codebase. Workspace files are mounted from the local file system or copied or cloned into the container.</description></item><item><title>Create Working Devcontainer For Nextjs Boilerplate</title><link>https://note.d.foundation/radar/timeline/create-working-devcontainer-for-nextjs-boilerplate/</link><pubDate>Wed, 11 Oct 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/create-working-devcontainer-for-nextjs-boilerplate/</guid><description>https://github.com/dwarvesf/nextjs-boilerplate/pull/40
asciicinema</description></item><item><title>Open Source Devpod Paperspace Provider</title><link>https://note.d.foundation/radar/timeline/open-source-devpod-paperspace-provider/</link><pubDate>Wed, 11 Oct 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/open-source-devpod-paperspace-provider/</guid><description/></item><item><title>Create Working Devcontainer For Go Api</title><link>https://note.d.foundation/radar/timeline/create-working-devcontainer-for-go-api/</link><pubDate>Sat, 07 Oct 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/create-working-devcontainer-for-go-api/</guid><description/></item><item><title>Fe 23 Training Type Safe Client Server</title><link>https://note.d.foundation/radar/timeline/fe-23-training-type-safe-client-server/</link><pubDate>Thu, 05 Oct 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/fe-23-training-type-safe-client-server/</guid><description/></item><item><title>First Introduced Use Of Duckdb In Consolelabs Logconsoleso</title><link>https://note.d.foundation/radar/timeline/first-introduced-use-of-duckdb-in-consolelabs-logconsoleso/</link><pubDate>Tue, 03 Oct 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/first-introduced-use-of-duckdb-in-consolelabs-logconsoleso/</guid><description/></item><item><title>Add Type Safe Client Server Support For Next Boilerplate</title><link>https://note.d.foundation/radar/timeline/add-type-safe-client-server-support-for-next-boilerplate/</link><pubDate>Thu, 28 Sep 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/add-type-safe-client-server-support-for-next-boilerplate/</guid><description/></item><item><title>Building Reliable Apps Sentry And Distributed Tracing For Effective Monitoring</title><link>https://note.d.foundation/radar/timeline/building-reliable-apps-sentry-and-distributed-tracing-for-effective-monitoring/</link><pubDate>Tue, 22 Aug 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/building-reliable-apps-sentry-and-distributed-tracing-for-effective-monitoring/</guid><description/></item><item><title>An Engineering Story Map For Llms</title><link>https://note.d.foundation/radar/timeline/an-engineering-story-map-for-llms/</link><pubDate>Mon, 21 Aug 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/an-engineering-story-map-for-llms/</guid><description/></item><item><title>Exploring Resumable Server Side Rendering With Qwik</title><link>https://note.d.foundation/radar/timeline/exploring-resumable-server-side-rendering-with-qwik/</link><pubDate>Mon, 21 Aug 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/exploring-resumable-server-side-rendering-with-qwik/</guid><description/></item><item><title>Radio Talk 65 Fullstack Type Safe With Trpc</title><link>https://note.d.foundation/radar/timeline/radio-talk-65-fullstack-type-safe-with-trpc/</link><pubDate>Mon, 21 Aug 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/radio-talk-65-fullstack-type-safe-with-trpc/</guid><description/></item><item><title>Challenge Faced When Researching Rlhf With Open Assistant</title><link>https://note.d.foundation/radar/timeline/challenge-faced-when-researching-rlhf-with-open-assistant/</link><pubDate>Mon, 14 Aug 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/challenge-faced-when-researching-rlhf-with-open-assistant/</guid><description/></item><item><title>Embracing Go 1210s Slog A Unified Logging Interface With Benchmarks Against Zerolog And Zap</title><link>https://note.d.foundation/radar/timeline/embracing-go-1210s-slog-a-unified-logging-interface-with-benchmarks-against-zerolog-and-zap/</link><pubDate>Wed, 09 Aug 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/embracing-go-1210s-slog-a-unified-logging-interface-with-benchmarks-against-zerolog-and-zap/</guid><description/></item><item><title>Adoption Of Pnpm</title><link>https://note.d.foundation/radar/timeline/adoption-of-pnpm/</link><pubDate>Mon, 31 Jul 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/adoption-of-pnpm/</guid><description/></item><item><title>Diagnosing And Resolving Performance Issues With Pprof And Trace In Go</title><link>https://note.d.foundation/radar/timeline/diagnosing-and-resolving-performance-issues-with-pprof-and-trace-in-go/</link><pubDate>Mon, 31 Jul 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/diagnosing-and-resolving-performance-issues-with-pprof-and-trace-in-go/</guid><description/></item><item><title>Migrate Yarn To Pnpm In Fortress</title><link>https://note.d.foundation/radar/timeline/migrate-yarn-to-pnpm-in-fortress/</link><pubDate>Fri, 28 Jul 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/migrate-yarn-to-pnpm-in-fortress/</guid><description/></item><item><title>Reverse Engineering</title><link>https://note.d.foundation/radar/reverse-engineering/</link><pubDate>Tue, 25 Jul 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/reverse-engineering/</guid><description/></item><item><title>Level Up Your Testing Game Harnessing Gomock For Unbeatable Unit Testing In Go</title><link>https://note.d.foundation/radar/timeline/level-up-your-testing-game-harnessing-gomock-for-unbeatable-unit-testing-in-go/</link><pubDate>Mon, 24 Jul 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/level-up-your-testing-game-harnessing-gomock-for-unbeatable-unit-testing-in-go/</guid><description/></item><item><title>Understanding Test Doubles An In Depth Look</title><link>https://note.d.foundation/radar/timeline/understanding-test-doubles-an-in-depth-look/</link><pubDate>Mon, 24 Jul 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/understanding-test-doubles-an-in-depth-look/</guid><description/></item><item><title>Migrate Yarn To Pnpm In Nghe Nhan Droppii</title><link>https://note.d.foundation/radar/timeline/migrate-yarn-to-pnpm-in-nghe-nhan-droppii/</link><pubDate>Fri, 21 Jul 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/migrate-yarn-to-pnpm-in-nghe-nhan-droppii/</guid><description/></item><item><title>Common Design Patterns In Golang Part 1</title><link>https://note.d.foundation/radar/timeline/common-design-patterns-in-golang---part-1/</link><pubDate>Thu, 20 Jul 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/common-design-patterns-in-golang---part-1/</guid><description/></item><item><title>Go Training 2023 From Basic To Advanced</title><link>https://note.d.foundation/radar/timeline/go-training-2023-from-basic-to-advanced/</link><pubDate>Tue, 18 Jul 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/go-training-2023-from-basic-to-advanced/</guid><description/></item><item><title>Radio Talk 64 Coding Best Practice That Optimizing Go Compiler</title><link>https://note.d.foundation/radar/timeline/radio-talk-64---coding-best-practice-that-optimizing-go-compiler/</link><pubDate>Mon, 17 Jul 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/radio-talk-64---coding-best-practice-that-optimizing-go-compiler/</guid><description/></item><item><title>Llms Accuracy Self Refinement</title><link>https://note.d.foundation/radar/timeline/llms-accuracy---self-refinement/</link><pubDate>Tue, 11 Jul 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/llms-accuracy---self-refinement/</guid><description/></item><item><title>Adversarial Prompting</title><link>https://note.d.foundation/radar/timeline/adversarial-prompting/</link><pubDate>Mon, 10 Jul 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/adversarial-prompting/</guid><description/></item><item><title>Chunking Strategies To Overcome Context Limitation In Llm</title><link>https://note.d.foundation/radar/timeline/chunking-strategies-to-overcome-context-limitation-in-llm/</link><pubDate>Mon, 10 Jul 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/chunking-strategies-to-overcome-context-limitation-in-llm/</guid><description/></item><item><title>Dealing With Long Term Memory Of Chatbot</title><link>https://note.d.foundation/radar/timeline/dealing-with-long-term-memory-of-chatbot/</link><pubDate>Mon, 10 Jul 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/dealing-with-long-term-memory-of-chatbot/</guid><description/></item><item><title>Reward Model</title><link>https://note.d.foundation/radar/timeline/reward-model/</link><pubDate>Fri, 07 Jul 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/reward-model/</guid><description/></item><item><title>Error Handling And Failure Management In A Go System</title><link>https://note.d.foundation/radar/timeline/error-handling-and-failure-management-in-a-go-system/</link><pubDate>Thu, 06 Jul 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/error-handling-and-failure-management-in-a-go-system/</guid><description/></item><item><title>Migrate Yarn To Pnpm In Nextjs Boilerplate</title><link>https://note.d.foundation/radar/timeline/migrate-yarn-to-pnpm-in-nextjs-boilerplate/</link><pubDate>Wed, 28 Jun 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/migrate-yarn-to-pnpm-in-nextjs-boilerplate/</guid><description/></item><item><title>Lessons Learned Building An Llm Chatbot A Case Study</title><link>https://note.d.foundation/radar/timeline/lessons-learned-building-an-llm-chatbot-a-case-study/</link><pubDate>Mon, 26 Jun 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/lessons-learned-building-an-llm-chatbot-a-case-study/</guid><description/></item><item><title>Q Learning</title><link>https://note.d.foundation/radar/timeline/q-learning/</link><pubDate>Mon, 26 Jun 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/q-learning/</guid><description/></item><item><title>Foundation Model</title><link>https://note.d.foundation/radar/timeline/foundation-model/</link><pubDate>Fri, 16 Jun 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/foundation-model/</guid><description/></item><item><title>Integrate Zod To Nextjs Boilerplate</title><link>https://note.d.foundation/radar/timeline/integrate-zod-to-nextjs-boilerplate/</link><pubDate>Fri, 16 Jun 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/integrate-zod-to-nextjs-boilerplate/</guid><description/></item><item><title>Llm Query Caching</title><link>https://note.d.foundation/radar/timeline/llm-query-caching/</link><pubDate>Fri, 16 Jun 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/llm-query-caching/</guid><description/></item><item><title>Sum Command</title><link>https://note.d.foundation/radar/timeline/sum-command/</link><pubDate>Fri, 16 Jun 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/sum-command/</guid><description/></item><item><title>Reinforcement Learning</title><link>https://note.d.foundation/radar/timeline/reinforcement-learning/</link><pubDate>Thu, 15 Jun 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/reinforcement-learning/</guid><description/></item><item><title>Build Your Chatbot With Open Source Large Language Models</title><link>https://note.d.foundation/radar/timeline/build-your-chatbot-with-open-source-large-language-models/</link><pubDate>Thu, 08 Jun 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/build-your-chatbot-with-open-source-large-language-models/</guid><description/></item><item><title>Integrate Playwright X Codecept With Discord</title><link>https://note.d.foundation/radar/timeline/integrate-playwright-x-codecept-with-discord/</link><pubDate>Tue, 06 Jun 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/integrate-playwright-x-codecept-with-discord/</guid><description/></item><item><title>Reinforcement Learning From Human Feedback</title><link>https://note.d.foundation/radar/reinforcement-learning-from-human-feedback/</link><pubDate>Thu, 01 Jun 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/reinforcement-learning-from-human-feedback/</guid><description>Description Reinforcement Learning from Human Feedback (RLHF) is a technology that combines reinforcement learning with human feedback to train natural language processing (NLP) models, such as ChatGPT. RLHF is a part of the training process that involves fine-tuning a language model using human feedback to make it more efficient and customer-appropriate. It is particularly useful in controlling and improving the responses of chatbot models.
What’s better about this method or library Technical Creativity: RLHF represents a creative approach that enhances the capabilities of NLP models by incorporating human feedback, which is often more intuitive and context-aware.</description></item><item><title>React Server Component</title><link>https://note.d.foundation/radar/timeline/react-server-component/</link><pubDate>Tue, 30 May 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/react-server-component/</guid><description/></item><item><title>Select Vector Database For Llm</title><link>https://note.d.foundation/radar/timeline/select-vector-database-for-llm/</link><pubDate>Tue, 30 May 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/select-vector-database-for-llm/</guid><description/></item><item><title>Overcoming Distributed System Challenges Using Golang</title><link>https://note.d.foundation/radar/timeline/overcoming-distributed-system-challenges-using-golang/</link><pubDate>Fri, 26 May 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/overcoming-distributed-system-challenges-using-golang/</guid><description/></item><item><title>Easy Prompt Engineering For Business Use And Mitigating Risks In Llms</title><link>https://note.d.foundation/radar/timeline/easy-prompt-engineering-for-business-use-and-mitigating-risks-in-llms/</link><pubDate>Fri, 19 May 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/easy-prompt-engineering-for-business-use-and-mitigating-risks-in-llms/</guid><description/></item><item><title>Migrate Headlessui To Radixui</title><link>https://note.d.foundation/radar/timeline/migrate-headlessui-to-radixui/</link><pubDate>Wed, 17 May 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/migrate-headlessui-to-radixui/</guid><description/></item><item><title>Llm 101 Enhance Developer Productivity</title><link>https://note.d.foundation/radar/timeline/llm-101-enhance-developer-productivity/</link><pubDate>Sat, 13 May 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/llm-101-enhance-developer-productivity/</guid><description/></item><item><title>Approaches To Manage Concurrent Workloads Like Worker Pools And Pipelines</title><link>https://note.d.foundation/radar/timeline/approaches-to-manage-concurrent-workloads-like-worker-pools-and-pipelines/</link><pubDate>Fri, 12 May 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/approaches-to-manage-concurrent-workloads-like-worker-pools-and-pipelines/</guid><description/></item><item><title>Workaround With Openais Token Limit With Langchain</title><link>https://note.d.foundation/radar/timeline/workaround-with-openais-token-limit-with-langchain/</link><pubDate>Tue, 02 May 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/workaround-with-openais-token-limit-with-langchain/</guid><description/></item><item><title>Langchain</title><link>https://note.d.foundation/radar/langchain/</link><pubDate>Sat, 29 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/langchain/</guid><description>Description LangChain is a comprehensive framework specifically designed to streamline the process of building applications that integrate large language models (LLMs). In the rapidly growing field of generative AI, LangChain serves as a robust platform, providing unique features like prompt management, chaining, data augmented generation, and a diverse range of agents to direct actions and determine their sequence. This framework assists developers in harnessing the immense potential of LLMs, offering a more accessible and coordinated approach to generative AI application development.</description></item><item><title>Working With Langchain Document Loaders</title><link>https://note.d.foundation/radar/timeline/working-with-langchain-document-loaders/</link><pubDate>Sat, 29 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/working-with-langchain-document-loaders/</guid><description/></item><item><title>Lessons Learned From Being A Part Of Corporate Microfrontend Implementation</title><link>https://note.d.foundation/radar/timeline/lessons-learned-from-being-a-part-of-corporate-microfrontend-implementation/</link><pubDate>Fri, 21 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/lessons-learned-from-being-a-part-of-corporate-microfrontend-implementation/</guid><description/></item><item><title>Migrate Yarn To Pnpm In React Toolkit</title><link>https://note.d.foundation/radar/timeline/migrate-yarn-to-pnpm-in-react-toolkit/</link><pubDate>Wed, 19 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/migrate-yarn-to-pnpm-in-react-toolkit/</guid><description/></item><item><title>Lessons Learned From Concurrency Practices In Blockchain Projects</title><link>https://note.d.foundation/radar/timeline/lessons-learned-from-concurrency-practices-in-blockchain-projects/</link><pubDate>Fri, 14 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/lessons-learned-from-concurrency-practices-in-blockchain-projects/</guid><description/></item><item><title>The Cost Of React Native</title><link>https://note.d.foundation/radar/timeline/the-cost-of-react-native/</link><pubDate>Fri, 14 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/the-cost-of-react-native/</guid><description/></item><item><title>Applying Mock Service Worker Msw For Seamless Web Development</title><link>https://note.d.foundation/radar/timeline/applying-mock-service-worker-msw-for-seamless-web-development/</link><pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/applying-mock-service-worker-msw-for-seamless-web-development/</guid><description/></item><item><title>State Of Frontend 2023 React Vs Angular Vs Vue</title><link>https://note.d.foundation/radar/timeline/state-of-frontend-2023-react-vs-angular-vs-vue/</link><pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/state-of-frontend-2023-react-vs-angular-vs-vue/</guid><description/></item><item><title>Large Language Model Llm</title><link>https://note.d.foundation/radar/large-language-model-llm/</link><pubDate>Mon, 10 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/large-language-model-llm/</guid><description>Description Large Language Models (LLMs) are deep learning tools used to understand and generate various forms of content. By learning from vast datasets, they offer a leap in AI applications, being particularly impactful in sectors such as software development, creative content generation, and customer service.
What’s better about this method or library LLMs&amp;rsquo; strength lies in their capacity to process and learn from diverse forms of communication, making them versatile and valuable in problem-solving.</description></item><item><title>Unit Testing Best Practices In Golang</title><link>https://note.d.foundation/radar/timeline/unit-testing-best-practices-in-golang/</link><pubDate>Fri, 07 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/unit-testing-best-practices-in-golang/</guid><description/></item><item><title>What Is Pnpm</title><link>https://note.d.foundation/radar/timeline/what-is-pnpm/</link><pubDate>Fri, 07 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/what-is-pnpm/</guid><description/></item><item><title>Codecept</title><link>https://note.d.foundation/radar/codecept/</link><pubDate>Wed, 05 Apr 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/codecept/</guid><description>Description Codecept is a modern testing framework for e2e testing that leverages powerful and flexible features such as WebDriver and PHPUnit to make testing more efficient and effective. It allows developers to write human-readable acceptance tests that simulate user behavior, enabling them to easily identify and fix problems in their applications. With Codecept, testing can be automated, and complex scenarios can be easily managed and debugged.
What’s better about this method or library Multi-Tasking: Codecept allows running multiple tests in different environments at the same time, which saves time and effort.</description></item><item><title>Integrate Playwright To Run E2e Test With Fortress</title><link>https://note.d.foundation/radar/timeline/integrate-playwright-to-run-e2e-test-with-fortress/</link><pubDate>Fri, 31 Mar 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/integrate-playwright-to-run-e2e-test-with-fortress/</guid><description/></item><item><title>A Case Study Interview Into Micro Frontends Building Design System For E Commerce Platform</title><link>https://note.d.foundation/radar/timeline/a-case-study-interview-into-micro-frontends-building-design-system-for-e-commerce-platform/</link><pubDate>Thu, 30 Mar 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/a-case-study-interview-into-micro-frontends-building-design-system-for-e-commerce-platform/</guid><description/></item><item><title>Accelerate Project Initiation With Advanced Nextjs Boilerplate React Toolkit</title><link>https://note.d.foundation/radar/timeline/accelerate-project-initiation-with-advanced-nextjs-boilerplate-react-toolkit/</link><pubDate>Thu, 30 Mar 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/accelerate-project-initiation-with-advanced-nextjs-boilerplate-react-toolkit/</guid><description/></item><item><title>From Multi Repo To Monorepo A Case Study With Nghenhan</title><link>https://note.d.foundation/radar/timeline/from-multi-repo-to-monorepo-a-case-study-with-nghenhan/</link><pubDate>Thu, 30 Mar 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/from-multi-repo-to-monorepo-a-case-study-with-nghenhan/</guid><description/></item><item><title>Case Study How Blue Green Deployment Help Mochi</title><link>https://note.d.foundation/radar/timeline/case-study-how-blue-green-deployment-help-mochi/</link><pubDate>Wed, 29 Mar 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/case-study-how-blue-green-deployment-help-mochi/</guid><description/></item><item><title>Develop Codecept To Integrate With Fortress</title><link>https://note.d.foundation/radar/timeline/develop-codecept-to-integrate-with-fortress/</link><pubDate>Thu, 23 Mar 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/develop-codecept-to-integrate-with-fortress/</guid><description/></item><item><title>Tackling Server State Complexity In Frontend Development</title><link>https://note.d.foundation/radar/timeline/tackling-server-state-complexity-in-frontend-development/</link><pubDate>Wed, 22 Mar 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/tackling-server-state-complexity-in-frontend-development/</guid><description/></item><item><title>Case Study From Multiple Repo To Monorepo At Nghe Nhan</title><link>https://note.d.foundation/radar/timeline/case-study-from-multiple-repo-to-monorepo-at-nghe-nhan/</link><pubDate>Mon, 20 Mar 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/case-study-from-multiple-repo-to-monorepo-at-nghe-nhan/</guid><description/></item><item><title>Why We Chose Our Tech Stack</title><link>https://note.d.foundation/radar/timeline/why-we-chose-our-tech-stack/</link><pubDate>Mon, 20 Mar 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/why-we-chose-our-tech-stack/</guid><description/></item><item><title>Why Micro Frontend</title><link>https://note.d.foundation/radar/timeline/why-micro-frontend/</link><pubDate>Fri, 17 Mar 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/why-micro-frontend/</guid><description/></item><item><title>Radio Talk Monorepo</title><link>https://note.d.foundation/radar/timeline/radio-talk-monorepo/</link><pubDate>Mon, 13 Mar 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/radio-talk-monorepo/</guid><description/></item><item><title>Apply Blue Green Deployment To Mochi</title><link>https://note.d.foundation/radar/timeline/apply-blue-green-deployment-to-mochi/</link><pubDate>Sat, 11 Mar 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/apply-blue-green-deployment-to-mochi/</guid><description/></item><item><title>Memo Blue Green Deployment</title><link>https://note.d.foundation/radar/timeline/memo-blue-green-deployment/</link><pubDate>Fri, 10 Mar 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/memo-blue-green-deployment/</guid><description/></item><item><title>Apache Spark</title><link>https://note.d.foundation/radar/apache-spark/</link><pubDate>Mon, 06 Mar 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/apache-spark/</guid><description>Description Apache Spark is an open-source distributed computing system used for big data processing and machine learning. It can process large datasets in parallel across many computers, making it faster than traditional data processing methods.
What’s better about this method or library Apache Spark is known for its ability to process large datasets in parallel across many computers, which makes it faster than traditional data processing methods. It also offers built-in support for machine learning, graph processing, and streaming data, making it a versatile tool for a variety of big data use cases.</description></item><item><title>Radio Talk Blue Green Deployment</title><link>https://note.d.foundation/radar/timeline/radio-talk-blue-green-deployment/</link><pubDate>Mon, 06 Mar 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/radio-talk-blue-green-deployment/</guid><description/></item><item><title>Radio Talk A Demo Of Query Engine Postgresql Vs Apache Spark</title><link>https://note.d.foundation/radar/timeline/radio-talk-a-demo-of-query-engine---postgresql-vs-apache-spark/</link><pubDate>Mon, 20 Feb 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/radio-talk-a-demo-of-query-engine---postgresql-vs-apache-spark/</guid><description/></item><item><title>Rnd Team Mentioned Apache Spark As A Solution To Handle Query Big Data</title><link>https://note.d.foundation/radar/timeline/rnd-team-mentioned-apache-spark-as-a-solution-to-handle-query-big-data/</link><pubDate>Fri, 17 Feb 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/rnd-team-mentioned-apache-spark-as-a-solution-to-handle-query-big-data/</guid><description/></item><item><title>Brainery Blue Green Deployment</title><link>https://note.d.foundation/radar/timeline/brainery-blue-green-deployment/</link><pubDate>Wed, 15 Feb 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/brainery-blue-green-deployment/</guid><description/></item><item><title>Radio Talk Engineering Health Metrics</title><link>https://note.d.foundation/radar/timeline/radio-talk-engineering-health-metrics/</link><pubDate>Mon, 30 Jan 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/radio-talk-engineering-health-metrics/</guid><description/></item><item><title>Brainery Validation With Zod</title><link>https://note.d.foundation/radar/timeline/brainery-validation-with-zod/</link><pubDate>Tue, 17 Jan 2023 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/brainery-validation-with-zod/</guid><description/></item><item><title>Radio Talk Nextjs 13</title><link>https://note.d.foundation/radar/timeline/radio-talk-nextjs-13/</link><pubDate>Mon, 26 Dec 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/radio-talk-nextjs-13/</guid><description/></item><item><title>Radio Talk Using Nextjs As A Fullstack Framework</title><link>https://note.d.foundation/radar/timeline/radio-talk-using-nextjs-as-a-fullstack-framework/</link><pubDate>Mon, 28 Nov 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/radio-talk-using-nextjs-as-a-fullstack-framework/</guid><description/></item><item><title>Brainery Progressive Delivery</title><link>https://note.d.foundation/radar/timeline/brainery-progressive-delivery/</link><pubDate>Thu, 13 Oct 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/brainery-progressive-delivery/</guid><description/></item><item><title>Use Yup To Validate Form Values In Droppii</title><link>https://note.d.foundation/radar/timeline/use-yup-to-validate-form-values-in-droppii/</link><pubDate>Mon, 03 Oct 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/use-yup-to-validate-form-values-in-droppii/</guid><description/></item><item><title>Memo React Native New Architecture</title><link>https://note.d.foundation/radar/timeline/memo-react-native-new-architecture/</link><pubDate>Tue, 14 Jun 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/memo-react-native-new-architecture/</guid><description/></item><item><title>Vitejs Native Modules</title><link>https://note.d.foundation/radar/timeline/vitejs-native-modules/</link><pubDate>Tue, 14 Jun 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/vitejs-native-modules/</guid><description/></item><item><title>Radio Talk Introduction To Apache Spark</title><link>https://note.d.foundation/radar/timeline/radio-talk-introduction-to-apache-spark/</link><pubDate>Mon, 06 Jun 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/radio-talk-introduction-to-apache-spark/</guid><description/></item><item><title>Vercel Switching Their Packages From Yarn To Pnpm Caught Our Attention</title><link>https://note.d.foundation/radar/timeline/vercel-switching-their-packages-from-yarn-to-pnpm-caught-our-attention/</link><pubDate>Thu, 26 May 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/vercel-switching-their-packages-from-yarn-to-pnpm-caught-our-attention/</guid><description/></item><item><title>Radio Talk Remix Vs Nextjs</title><link>https://note.d.foundation/radar/timeline/radio-talk-remix-vs-nextjs/</link><pubDate>Mon, 16 May 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/radio-talk-remix-vs-nextjs/</guid><description/></item><item><title>Radio Talk Turborepo</title><link>https://note.d.foundation/radar/timeline/radio-talk-turborepo/</link><pubDate>Mon, 11 Apr 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/radio-talk-turborepo/</guid><description/></item><item><title>React Toolkit Migrate From Lerna To Turporepo</title><link>https://note.d.foundation/radar/timeline/react-toolkit-migrate-from-lerna-to-turporepo/</link><pubDate>Sat, 15 Jan 2022 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/react-toolkit-migrate-from-lerna-to-turporepo/</guid><description/></item><item><title>Backend For Call Requests To Binance And Get Data From Multiple Platforms</title><link>https://note.d.foundation/radar/timeline/backend-for-call-requests-to-binance-and-get-data-from-multiple-platforms/</link><pubDate>Wed, 01 Dec 2021 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/backend-for-call-requests-to-binance-and-get-data-from-multiple-platforms/</guid><description/></item><item><title>Create Backend Monorepo To Share Code And Manage Multiple Services In One Repo</title><link>https://note.d.foundation/radar/timeline/create-backend-monorepo-to-share-code-and-manage-multiple-services-in-one-repo/</link><pubDate>Wed, 01 Dec 2021 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/create-backend-monorepo-to-share-code-and-manage-multiple-services-in-one-repo/</guid><description/></item><item><title>Nextjs Boilerplate</title><link>https://note.d.foundation/radar/timeline/nextjs-boilerplate/</link><pubDate>Sun, 31 Oct 2021 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/nextjs-boilerplate/</guid><description/></item><item><title>Use Monorepos To Build V3 Of React Sdk For Searchio</title><link>https://note.d.foundation/radar/timeline/use-monorepos-to-build-v3-of-react-sdk-for-searchio/</link><pubDate>Sat, 09 Oct 2021 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/use-monorepos-to-build-v3-of-react-sdk-for-searchio/</guid><description/></item><item><title>React Toolkit</title><link>https://note.d.foundation/radar/timeline/react-toolkit/</link><pubDate>Fri, 10 Sep 2021 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/react-toolkit/</guid><description/></item><item><title>Use Nx For Managing Basehq Frontend Monorepos</title><link>https://note.d.foundation/radar/timeline/use-nx-for-managing-basehq-frontend-monorepos/</link><pubDate>Thu, 01 Jul 2021 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/use-nx-for-managing-basehq-frontend-monorepos/</guid><description/></item><item><title>Adapt Cucumber As A Bdd For Wego</title><link>https://note.d.foundation/radar/timeline/adapt-cucumber-as-a-bdd-for-wego/</link><pubDate>Thu, 01 Apr 2021 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/adapt-cucumber-as-a-bdd-for-wego/</guid><description/></item><item><title>Apply Page Object Model Structure To Wego</title><link>https://note.d.foundation/radar/timeline/apply-page-object-model-structure-to-wego/</link><pubDate>Thu, 01 Apr 2021 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/apply-page-object-model-structure-to-wego/</guid><description/></item><item><title>Apply Page Object Model Structure To Aharooms</title><link>https://note.d.foundation/radar/timeline/apply-page-object-model-structure-to-aharooms/</link><pubDate>Fri, 02 Oct 2020 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/apply-page-object-model-structure-to-aharooms/</guid><description/></item><item><title>Apply Page Object Model Structure To Artzy</title><link>https://note.d.foundation/radar/timeline/apply-page-object-model-structure-to-artzy/</link><pubDate>Thu, 17 Sep 2020 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/apply-page-object-model-structure-to-artzy/</guid><description/></item><item><title>Apply Page Object Model Structure To Sci</title><link>https://note.d.foundation/radar/timeline/apply-page-object-model-structure-to-sci/</link><pubDate>Thu, 10 Sep 2020 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/apply-page-object-model-structure-to-sci/</guid><description/></item><item><title>Build Automation For Sci</title><link>https://note.d.foundation/radar/timeline/build-automation-for-sci/</link><pubDate>Thu, 10 Sep 2020 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/build-automation-for-sci/</guid><description/></item><item><title>Apply Page Object Model Structure To Basehq</title><link>https://note.d.foundation/radar/timeline/apply-page-object-model-structure-to-basehq/</link><pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/apply-page-object-model-structure-to-basehq/</guid><description/></item><item><title>Practice And Using Selenium In Setel Project</title><link>https://note.d.foundation/radar/timeline/practice-and-using-selenium-in-setel-project/</link><pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/practice-and-using-selenium-in-setel-project/</guid><description/></item><item><title>Mdx Document For</title><link>https://note.d.foundation/radar/timeline/mdx-document-for/</link><pubDate>Mon, 16 Mar 2020 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/mdx-document-for/</guid><description/></item><item><title>Develop</title><link>https://note.d.foundation/radar/timeline/develop/</link><pubDate>Wed, 04 Mar 2020 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/develop/</guid><description/></item><item><title>Using K6 In Setel</title><link>https://note.d.foundation/radar/timeline/using-k6-in-setel/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/using-k6-in-setel/</guid><description/></item><item><title>Apply Monorepos To Repit To Resolve The Problem Of Consistency</title><link>https://note.d.foundation/radar/timeline/apply-monorepos-to-repit-to-resolve-the-problem-of-consistency/</link><pubDate>Sat, 12 Oct 2019 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/apply-monorepos-to-repit-to-resolve-the-problem-of-consistency/</guid><description/></item><item><title>Migrate Aharooms Pms To Typescript</title><link>https://note.d.foundation/radar/timeline/migrate-aharooms-pms-to-typescript/</link><pubDate>Thu, 18 Apr 2019 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/migrate-aharooms-pms-to-typescript/</guid><description/></item><item><title>Learn Typescript As A Mandatory To Develop Reapit Foundation</title><link>https://note.d.foundation/radar/timeline/learn-typescript-as-a-mandatory-to-develop-reapit-foundation/</link><pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/learn-typescript-as-a-mandatory-to-develop-reapit-foundation/</guid><description/></item><item><title>Develop Sdk Integration Demo For Sajari</title><link>https://note.d.foundation/radar/timeline/develop-sdk-integration-demo-for-sajari/</link><pubDate>Mon, 15 Oct 2018 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/develop-sdk-integration-demo-for-sajari/</guid><description/></item><item><title>Use Monorepos To Resolve The Problem Of Sharing Ui Components In Aharoom</title><link>https://note.d.foundation/radar/timeline/use-monorepos-to-resolve-the-problem-of-sharing-ui-components-in-aharoom/</link><pubDate>Tue, 11 Sep 2018 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/use-monorepos-to-resolve-the-problem-of-sharing-ui-components-in-aharoom/</guid><description/></item><item><title>Create Api Service For Urbox To Sync Orders From 3rd Parties And Manage Shipment</title><link>https://note.d.foundation/radar/timeline/create-api-service-for-urbox-to-sync-orders-from-3rd-parties-and-manage-shipment/</link><pubDate>Mon, 05 Jan 2015 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/create-api-service-for-urbox-to-sync-orders-from-3rd-parties-and-manage-shipment/</guid><description/></item><item><title>Ant Design</title><link>https://note.d.foundation/radar/ant-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/ant-design/</guid><description/></item><item><title>Apache Kafka</title><link>https://note.d.foundation/radar/apache-kafka/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/apache-kafka/</guid><description>Description → Write a quick summary about what the technology entails and covers.
What’s better about this method or library ?
What can we do with it ?
How should we adopt it ?</description></item><item><title>Argocd</title><link>https://note.d.foundation/radar/argocd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/argocd/</guid><description>Description ArgoCD is an open-source continuous delivery and GitOps tool that helps automate and simplify the deployment and management of applications in Kubernetes clusters. It provides a declarative approach to managing and syncing configuration files and application manifests, making it easy to deploy and manage applications across different environments.
What’s better about this method or library ArgoCD simplifies the deployment process by providing a single source of truth for configuration files and application manifests.</description></item><item><title>Astro</title><link>https://note.d.foundation/radar/astro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/astro/</guid><description>Description Astro is a modern static site generator that aims to provide developers with an easy and efficient way to build high-performance websites. It uses a unique approach to building websites, called &amp;ldquo;dynamic static&amp;rdquo;, that allows developers to create dynamic content while still enjoying the benefits of a static site.
What’s better about this method or library One of the key benefits of Astro is that it provides developers with an easy and efficient way to build high-performance websites.</description></item><item><title>Backstage</title><link>https://note.d.foundation/radar/backstage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/backstage/</guid><description/></item><item><title>Blue Green Deployment</title><link>https://note.d.foundation/radar/blue-green-deployment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/blue-green-deployment/</guid><description>Description Blue-green deployment is a technique for releasing software updates with zero downtime and minimal risk. It involves deploying a new version of your application (the &amp;ldquo;green&amp;rdquo; version) alongside the existing version (the &amp;ldquo;blue&amp;rdquo; version), and then gradually routing traffic from the blue version to the green version. This allows you to test and validate the new version before switching over completely, ensuring that your users don&amp;rsquo;t experience any downtime or issues during the deployment process.</description></item><item><title>Browserstack</title><link>https://note.d.foundation/radar/browserstack/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/browserstack/</guid><description> Description Write a quick summary about what the technology entails and covers.
Output Goal Write what the output goal for this adoption is. It could be one of, but not limited to:
Technical: technical implementation to be used in a project and company-wide **Communication &amp;amp; Collaboration: **tools or implementation to facilitate in the communication process between team members Timeline (2022-08-25) …</description></item><item><title>Carbon</title><link>https://note.d.foundation/radar/carbon/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/carbon/</guid><description>Description Carbon is a successor language to C++, which aims to give ergonomics and accessibility that modern languages currently have with interoperability with C++:
JavaScript → TypeScript Java → Kotlin C++ → Carbon Output Goal Write what the output goal for this adoption is. It could be one of, but not limited to:
Technical: technical implementation to be used in a project and company-wide **Communication &amp;amp; Collaboration: **tools or implementation to facilitate in the communication process between team members Timeline (2022-07-26) - 8:52AM - Khac Vy post on Carbon https://github.</description></item><item><title>Chatgpt Assistance</title><link>https://note.d.foundation/radar/chatgpt-assistance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/chatgpt-assistance/</guid><description>Description ChatGPT is an artificial intelligence language model developed by OpenAI that uses deep learning techniques to generate human-like responses to natural language inputs. It has the ability to understand and interpret human language, allowing it to provide helpful responses to a wide range of questions and tasks.
What’s better about this method or library ChatGPT&amp;rsquo;s unique capability lies in its ability to generate natural language responses that closely resemble those of humans.</description></item><item><title>Chromatic</title><link>https://note.d.foundation/radar/chromatic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/chromatic/</guid><description/></item><item><title>Clickhouse</title><link>https://note.d.foundation/radar/clickhouse/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/clickhouse/</guid><description/></item><item><title>Cloudflare Workers</title><link>https://note.d.foundation/radar/cloudflare-workers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/cloudflare-workers/</guid><description> Description Cloudflare Workers is a platform to deploy serverless code and static assets that runs on their edge network to provide low-latency for users. The platform service is generally available and allows developers to store data through a key-value storage.
Output Goal Use the platform in lieu of other serverless platforms Timeline (2022-08-25) - [Hold] (Tom) Added description and basic output.</description></item><item><title>Commitlint</title><link>https://note.d.foundation/radar/commitlint/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/commitlint/</guid><description> Description commitlint is a small tool to enforce contextual commit in order to automate rendering the changelog based on the commit, it becomes our standard since early 2020
Timeline (2019-01-01) Adopted</description></item><item><title>Copilot</title><link>https://note.d.foundation/radar/copilot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/copilot/</guid><description>Description GitHub Copilot is an AI pair programmer that helps you write code faster and with less work. It draws context from comments and code to suggest individual lines and whole functions instantly. GitHub Copilot is powered by OpenAI Codex, a generative pretrained language model created by OpenAI. It is available as an extension for Visual Studio Code, Visual Studio, Neovim, and the JetBrains suite of integrated development environments (IDEs).</description></item><item><title>Cucumber</title><link>https://note.d.foundation/radar/cucumber/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/cucumber/</guid><description>Description Cucumber is a tool used in automation testing to write and run tests in natural language, which can be easily understood by both technical and non-technical stakeholders. It allows for Behavior-Driven Development (BDD) practices where tests are written from a user&amp;rsquo;s perspective in a high-level language called Gherkin. Cucumber also integrates well with various programming languages such as Java, Ruby, and .NET. Overall, Cucumber simplifies the testing process by allowing for collaboration, reducing ambiguity, and improving the overall quality of software testing.</description></item><item><title>Cypress</title><link>https://note.d.foundation/radar/cypress/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/cypress/</guid><description>Description Cypress is a JavaScript-based end-to-end testing framework that enables developers to write and run tests for web applications. It provides a comprehensive testing environment with built-in assertions, automatic waiting, and time-travel debugging, making it easier for developers to write and debug tests.
What’s better about this method or library Cypress provides several advantages over traditional testing frameworks. Firstly, it runs directly in the browser, allowing developers to see what&amp;rsquo;s happening in real-time and debug issues more quickly.</description></item><item><title>Dapr</title><link>https://note.d.foundation/radar/dapr/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/dapr/</guid><description>Description Dapr is a portable, serverless, event-driven runtime that makes it easy for developers to build resilient, stateless and stateful microservices that run on the cloud and edge and embraces the diversity of languages and developer frameworks.
With the use of Kubernetes, Dapr injects a side-car (container or process) to each compute unit that interacts with event triggers through standard HTTP or gRPC protocols.
Output Goal Assess usability of the runtime on current projects and tradeoffs vs infrastructure-centric service meshes Timeline (2022-08-25) - [Hold] (Tom) Added description and basic output.</description></item><item><title>Deno</title><link>https://note.d.foundation/radar/deno/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/deno/</guid><description>Description Write a quick summary about what the technology entails and covers.
Output Goal Write what the output goal for this adoption is. It could be one of, but not limited to:
Technical: technical implementation to be used in a project and company-wide **Communication &amp;amp; Collaboration: **tools or implementation to facilitate in the communication process between team members Timeline (2022-08-25) [Hold] (Tom) - Added description and basic output. (2021-03-30) (huyng) First official mention of Deno company https://discord.</description></item><item><title>Detox</title><link>https://note.d.foundation/radar/detox/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/detox/</guid><description>Description Detox is a gray-box testing framework for mobile apps, particularly useful for testing React Native apps that are powered by Wix. It allows developers to write automated end-to-end tests that simulate user interactions with the app and verify its correctness. Detox provides a set of APIs and matchers, integrates with popular test runners, and allows for comprehensive testing of both the JavaScript and native layers of the app.</description></item><item><title>Devpod</title><link>https://note.d.foundation/radar/devpod/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/devpod/</guid><description>Description →
Devpod is a client-only tool that allows developers to create reproducible development environments based on a devcontainer.json file on any backend. Each developer environment runs in a container and is specified through a devcontainer.json. Through Devpod providers, these environments can be created on any backend, such as the local computer, a Kubernetes cluster, any reachable remote machine, or in a VM in the cloud. You can think of Devpod as the glue that connects your local IDE to a machine where you want to develop on.</description></item><item><title>Dora Metrics</title><link>https://note.d.foundation/radar/dora-metrics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/dora-metrics/</guid><description>Description DORA Metrics, also known as DevOps Research and Assessment Metrics, are a set of metrics used to measure the performance of DevOps practices within an organization. These metrics are based on a research study conducted by the DevOps Research and Assessment (DORA) group, which identified four key metrics that correlate with high-performing DevOps organizations:
Deployment Frequency: This measures how frequently an organization deploys code to production. Lead Time for Changes: This measures the time it takes for code changes to go from code commit to production.</description></item><item><title>Duckdb</title><link>https://note.d.foundation/radar/duckdb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/duckdb/</guid><description>Description DuckDB is an in-memory analytical database system that aims to provide high performance and efficient querying for analytical workloads. It is designed to handle large datasets and perform complex analytical queries with low latency. DuckDB&amp;rsquo;s architecture focuses on columnar storage and vectorized query execution, making it well-suited for data analysis tasks. It supports SQL queries and can be integrated into various programming languages and frameworks.
What’s better about this method or library Often analytical workloads are relatively small, even for companies that host large data warehouses.</description></item><item><title>Earthly</title><link>https://note.d.foundation/radar/earthly/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/earthly/</guid><description> Description A repeatable syntax builds to untangle the debugging process between the local environment and the CI platform. Earthly allows our DevOps to merge all the tools into one &amp;lsquo;Earth&amp;rsquo; and eventually simplify the whole CI/CD flow. As DevOps must integrate different files from both Makefile and Dockerfile for integration testing, Earthfile was created to remove this burden automatically. Trial in 2021
Timeline (2021-01-01) Trial</description></item><item><title>Elixir</title><link>https://note.d.foundation/radar/elixir/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/elixir/</guid><description>Description Elixir is a modern programming language designed for building scalable and fault-tolerant applications. It was created by José Valim in 2011 and is built on top of the Erlang virtual machine (VM). Elixir is a functional language that is dynamic, concurrent, and expressive, with a syntax that is similar to Ruby.
Elixir is well-suited for developing distributed systems, web applications, and real-time systems, as it comes with built-in tools for handling concurrency, fault-tolerance, and distributed communication.</description></item><item><title>Elixir Umbrella Project</title><link>https://note.d.foundation/radar/elixir-umbrella-project/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/elixir-umbrella-project/</guid><description>Description The Mix tool can help us create Elixir mono repo.
An Elixir umbrella project is a collection of Elixir applications that are grouped together under a single umbrella project. An umbrella project can contain one or more Elixir applications, each with its own dependencies, configuration, and codebase. The idea behind an umbrella project is to allow multiple Elixir applications to be developed and managed together as a single project.</description></item><item><title>Erlang</title><link>https://note.d.foundation/radar/erlang/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/erlang/</guid><description/></item><item><title>Error Logging Convention</title><link>https://note.d.foundation/radar/error-logging-convention/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/error-logging-convention/</guid><description> Description It is a new adopted practices in DF, the practice define the way to conventionally return the error structure between the systems or the FE and BE
Timeline (2020-01-01) Adopted?</description></item><item><title>Eslint</title><link>https://note.d.foundation/radar/eslint/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/eslint/</guid><description>Description ESlint is an open-source static code analysis tool for JavaScript. It provides a way to check code quality and enforce coding standards, helping developers catch errors and inconsistencies early in the development process. ESlint can be used in a variety of contexts, including web applications, Node.js, and React Native.
What’s better about this method or library ESlint provides a flexible and configurable way to enforce coding standards and check for errors in JavaScript code.</description></item><item><title>Event Sourcing</title><link>https://note.d.foundation/radar/event-sourcing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/event-sourcing/</guid><description>Description Simply put, event sourcing is focused on the persistence of events as a recording of a change of state of an entity.
Event sourcing is an approach for maintaining the state of business entities by recording each change of state as an event. This allows businesses to have a complete and accurate history of their data, which can be used for auditing, debugging, analytics, and replaying scenarios.
Event sourcing also enables businesses to implement the CQRS pattern, which separates the read and write models of data and improves scalability and performance.</description></item><item><title>Excalidraw</title><link>https://note.d.foundation/radar/excalidraw/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/excalidraw/</guid><description/></item><item><title>Expo</title><link>https://note.d.foundation/radar/expo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/expo/</guid><description>Description Expo is a free and open-source framework for building mobile applications using React Native. It provides a set of tools and services that make it easier to develop, test, and deploy mobile applications, including a development environment, pre-built UI components, and built-in features like push notifications and in-app purchases. Expo also offers over-the-air updates, which allow developers to update their applications without going through the app store review process.</description></item><item><title>Figma</title><link>https://note.d.foundation/radar/figma/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/figma/</guid><description/></item><item><title>Formal Verification</title><link>https://note.d.foundation/radar/formal-verification/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/formal-verification/</guid><description>Description When doing the testing, usually QA’s members needs to update their record and their status on the testing’s ticket. So basically, for this one just sharing on how we’re going to do it.
What can we do with it Testing on the Web Browser Provide the name of the environment where we test on the ticket: **Passed **or Failed Provide the recordings with voice over will be easier for the listener to follow up/Provide an image of the testing Tag related person in the testing’s ticket and cc your Product Manager Testing on the Mobile Application Provide the name of the environment where we test on the ticket: **Passed **or Failed Provide the name of the version from the device we are using to test: For example: iPhone 14 - 16.</description></item><item><title>Fullstack Tracing</title><link>https://note.d.foundation/radar/fullstack-tracing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/fullstack-tracing/</guid><description>Description → Write a quick summary about what the technology entails and covers.
What’s better about this method or library ?
What can we do with it ?
How should we adopt it ?</description></item><item><title>Gestalt Principle</title><link>https://note.d.foundation/radar/gestalt-principle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/gestalt-principle/</guid><description>Description Gestalt principles explain how humans perceive the outside world, how they recognize the pattern, and simplify complex images in daily life. In the User Interface Design field, we use Gestalt rules to make the design look more aesthetic and friendlier to users. Gestalt Principles will be an active supporter for us during our UI design process. Before we fully understand UI&amp;rsquo;s beauty and how to create it, those principles are our guidance.</description></item><item><title>Github Actions</title><link>https://note.d.foundation/radar/github-actions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/github-actions/</guid><description>Description GitHub Actions makes it easy to automate all your software workflows, now with world-class CI/CD. Build, test, and deploy your code right from GitHub. Make code reviews, branch management, and issue triaging work the way you want.
What’s better about this method or library ?
What can we do with it ?
How should we adopt it ?</description></item><item><title>Golang</title><link>https://note.d.foundation/radar/golang/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/golang/</guid><description>Description Golang is a programming language developed by Google designed to be simple, efficient, and reliable. Its syntax and ease of use are similar to dynamic languages like Python and Ruby, while its performance is on par with compiled languages like C++. Go&amp;rsquo;s simplicity makes learning, using, maintaining, and refilling code easy. Its built-in concurrency support and efficient garbage collector make it an excellent choice for building cloud-native applications and micro-services that require fast and efficient code.</description></item><item><title>Grafana</title><link>https://note.d.foundation/radar/grafana/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/grafana/</guid><description>Description Grafana is an open-source platform for data visualization and analytics. It allows users to create custom dashboards and visualizations from a wide range of data sources, including popular databases, cloud services, and IoT devices.
What’s better about this method or library ?
What can we do with it ?
How should we adopt it ?</description></item><item><title>Graylog</title><link>https://note.d.foundation/radar/graylog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/graylog/</guid><description/></item><item><title>Headless Ui</title><link>https://note.d.foundation/radar/headless-ui/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/headless-ui/</guid><description> Description HeadlessUI is a set of fully accessible and customizable UI components, built using Tailwind CSS, that do not include any styling out of the box. They are called &amp;ldquo;headless&amp;rdquo; because they provide functionality without the visual components, allowing developers to easily implement their own designs.
What’s better about this method or library What can we do with it How should we adopt it</description></item><item><title>Hoppscotch</title><link>https://note.d.foundation/radar/hoppscotch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/hoppscotch/</guid><description>Description Hoppscotch is an API development and testing tool that simplifies the process of building and consuming APIs. It provides a simple and intuitive interface for creating, testing, and sharing APIs.
What’s better about this method or library Hoppscotch is an open-source project with a user-friendly interface that allows developers to easily create and test APIs. It provides a range of features, including support for RESTful, GraphQL, WebSocket, and other types of APIs.</description></item><item><title>Ipfs</title><link>https://note.d.foundation/radar/ipfs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/ipfs/</guid><description/></item><item><title>Jotai</title><link>https://note.d.foundation/radar/jotai/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/jotai/</guid><description>Description Jotai takes an atomic approach to global React state management with a model inspired by Recoil.
What’s better about this method or library Build state by combining atoms and renders are automatically optimized based on atom dependency. This solves the extra re-render issue of React context and eliminates the need for memoization.
It scales from a simple useState replacement to an enterprise TypeScript application with complex requirements. Plus there are plenty of utilities and integrations to help you along the way!</description></item><item><title>K6</title><link>https://note.d.foundation/radar/k6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/k6/</guid><description>Description K6 is a powerful and open-source load testing tool that is designed to help developers and engineers test the scalability and performance of their APIs, microservices, and other web applications. It allows you to easily create and execute load tests with realistic user scenarios and simulate thousands of virtual users to generate peak traffic and stress-test your application.
What’s better about this method or library With K6 load testing, you can quickly identify performance bottlenecks, detect and resolve issues related to response time, server latency, and throughput, and optimize your system to handle high traffic loads.</description></item><item><title>K9s</title><link>https://note.d.foundation/radar/k9s/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/k9s/</guid><description>Description K9s is a terminal based UI to interact with your Kubernetes clusters. The aim of this project is to make it easier to navigate, observe and manage your deployed applications in the wild. K9s continually watches Kubernetes for changes and offers subsequent commands to interact with your observed resources.
What’s better about this method or library K9S provides a user-friendly interface that makes it easy to manage your Kubernetes resources, even for users with little or no experience with the Kubernetes CLI.</description></item><item><title>Kaniko</title><link>https://note.d.foundation/radar/kaniko/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/kaniko/</guid><description> Description Kaniko is an alternative for docker in docker approach, it helps to build a docker image without docker engine. at Dwarvesv we are embracing the CI/CD culture, in order to do that, simplify things is a must
https://github.com/GoogleContainerTools/kaniko
Timeline (2020-01-01) Adopted</description></item><item><title>Kotlin</title><link>https://note.d.foundation/radar/kotlin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/kotlin/</guid><description/></item><item><title>Kubeseal Sops</title><link>https://note.d.foundation/radar/kubeseal-sops/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/kubeseal-sops/</guid><description> Description Kubeseal: Encrypt your Secret into a SealedSecret, which is safe to store - even to a public repository. The SealedSecret can be decrypted only by the controller running in the target cluster, and nobody else (not even the original author) is able to obtain the original Secret from the SealedSecret. Sops: Sops is an editor of encrypted files that supports YAML, JSON, ENV, INI and BINARY formats and encrypts with AWS KMS, GCP KMS, Azure Key Vault, age, and PGP Output Goal Use as general tools for managing dangling secrets across projects and internal work Timeline (2022-01-16) - **[Trial] **First listed for trial in projects (2022-08-31) - (Nguyen) Create a post on learning-topics</description></item><item><title>Ladle</title><link>https://note.d.foundation/radar/ladle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/ladle/</guid><description>Description Ladle is a drop-in alternative to Storybook. It is a tool for developing and testing your React components in an environment that&amp;rsquo;s isolated and faster than most real-world applications. Ladle also creates an index of your components, so you can easily test them through tools like Playwright.
What’s better about this method or library Ladle supports only React, embraces the latest standards (ES Modules) and focuses on performance. It&amp;rsquo;s built around Vite - modules are directly served to the browser and the bundling step is completely skipped.</description></item><item><title>Live View</title><link>https://note.d.foundation/radar/timeline/live-view/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/live-view/</guid><description/></item><item><title>Loki</title><link>https://note.d.foundation/radar/loki/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/loki/</guid><description>Description Loki is a horizontally scalable, highly available, multi-tenant log aggregation system inspired by Prometheus. Like Prometheus, it is a log and data driver to be used in Grafana.
Output Goal Apply log system to all Kubernetes related projects Have the log system integrated with related pods and applications in their respective namespaces in the cluster Create common configurations for projects to organize logging Timeline (2022-01-15) - (Tom, Quang) Fix production disk issues related to https://github.</description></item><item><title>Makefile</title><link>https://note.d.foundation/radar/makefile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/makefile/</guid><description/></item><item><title>Micro Frontend</title><link>https://note.d.foundation/radar/micro-frontend/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/micro-frontend/</guid><description>Description A software architectural style where a frontend application is decomposed into small, independent, and autonomous components that can be developed, deployed, and scaled independently. Each micro-frontend is responsible for a specific part of the user interface, and it can be developed by a separate team using a different technology stack.
What’s better about this method or library Improves productivity: Teams can work independently on different parts of the application, allowing for faster development cycles Easier maintenance and evolution of the application, as updates to one micro-frontend do not affect the others Faster time to market Greater flexibility and scalability: Each micro-frontend can be developed using the technology that is best suited for the specific functionality it provides Allows for a more modular and adaptable architecture, as new micro-frontends can be added or removed as needed to meet changing business requirements Each micro-frontend can be deployed independently, enabling continuous delivery and reducing the risk of downtime or errors Reduced risk of system failures: If one micro-frontend fails, the rest of the application can continue to function.</description></item><item><title>Monorepo</title><link>https://note.d.foundation/radar/monorepo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/monorepo/</guid><description>Description Monorepo is a software development approach where multiple projects or applications are stored in a single code repository, rather than having separate repositories for each project. This allows for shared code, streamlined development processes, and easier collaboration among teams.
What’s better about this method Using a monorepo approach can provide several benefits, including:
Shared code: By keeping all code in one repository, teams can easily share code and dependencies across projects, reducing duplication and making it easier to maintain consistency.</description></item><item><title>Msw</title><link>https://note.d.foundation/radar/msw/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/msw/</guid><description>Description MSW (Mock Service Worker) is a technology and library that enables developers to mock API endpoints and intercept network requests during testing or development. It provides a way to simulate backend behavior and responses without relying on the actual server, making it easier to test and develop frontend applications.
What’s better about this method or library There are several advantages and benefits to using MSW (Mock Service Worker) for API mocking and request interception.</description></item><item><title>N6n</title><link>https://note.d.foundation/radar/n6n/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/n6n/</guid><description> Description What’s better about this method or library What can we do with it How should we adopt it</description></item><item><title>Nestjs</title><link>https://note.d.foundation/radar/nestjs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/nestjs/</guid><description>Description Nest.js is a Node.js framework for building scalable and maintainable server-side applications. It is built on top of Express, Fastify, and other popular libraries, and provides a powerful set of abstractions and features for building complex, enterprise-grade applications.
What’s better about this method or library One of the key advantages of Nest.js is its modular architecture, which allows developers to organize their code into small, reusable modules that can be easily tested and maintained.</description></item><item><title>Netlify</title><link>https://note.d.foundation/radar/netlify/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/netlify/</guid><description>Description Netlify is a cloud-based platform for deploying and hosting modern web applications. It provides a powerful set of tools for building, testing, and deploying web applications, as well as a content delivery network (CDN) that ensures fast and reliable performance for users around the world. Netlify is designed to work seamlessly with popular front-end frameworks such as React, Vue, and Angular.
What’s better about this method or library One of the biggest advantages of Netlify is that it provides a highly automated and streamlined workflow for deploying and hosting web applications.</description></item><item><title>Newrelic</title><link>https://note.d.foundation/radar/newrelic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/newrelic/</guid><description>Description New Relic is a web-based software used for full-stack monitoring, allowing users to monitor applications, infrastructure, web browsers, and other components on a single platform.
This tool tracks and provides your web application performance details in real time. Developers can analyze them to understand what causes the performance issues.
What’s better about this method or library ?
What can we do with it ?
How should we adopt it ?</description></item><item><title>Nextjs</title><link>https://note.d.foundation/radar/nextjs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/nextjs/</guid><description>Description Next.js is an open-source web development framework created by Vercel enabling React-based web applications with server-side rendering and generating static websites.
What’s better about this framework One of the biggest advantages of Next.js is its ease of use. The framework offers a simple and intuitive API that makes it easy for developers to build complex web applications without having to worry about the underlying infrastructure.
Another key advantage of Next.</description></item><item><title>Nghenhan Microservices</title><link>https://note.d.foundation/radar/timeline/nghenhan-microservices/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/nghenhan-microservices/</guid><description/></item><item><title>Nodejs</title><link>https://note.d.foundation/radar/nodejs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/nodejs/</guid><description> Description What’s better about this method or library What can we do with it How should we adopt it</description></item><item><title>Nostrum</title><link>https://note.d.foundation/radar/nostrum/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/nostrum/</guid><description/></item><item><title>Nx</title><link>https://note.d.foundation/radar/nx/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/nx/</guid><description/></item><item><title>Orval</title><link>https://note.d.foundation/radar/orval/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/orval/</guid><description>Description → Write a quick summary about what the technology entails and covers.
What’s better about this method or library ?
What can we do with it ?
How should we adopt it ?</description></item><item><title>Page Object Model</title><link>https://note.d.foundation/radar/page-object-model/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/page-object-model/</guid><description>Description Page Object Model (POM) is a popular design pattern used in test automation for creating object repositories for web UI elements. It helps in creating a modular framework and provides a clear separation between test code and page-specific code, making the automation scripts more maintainable and reusable. In POM, each web page is represented as a class, and its elements are defined as variables in that class, along with their respective actions.</description></item><item><title>Partytown</title><link>https://note.d.foundation/radar/partytown/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/partytown/</guid><description>https://partytown.builder.io/</description></item><item><title>Phaser</title><link>https://note.d.foundation/radar/phaser/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/phaser/</guid><description/></item><item><title>Phoenix</title><link>https://note.d.foundation/radar/phoenix/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/phoenix/</guid><description>Description Phoenix is a free and open-source web application framework written in the Elixir programming language. It is designed to help developers build scalable, fault-tolerant, and high-performance web applications with ease.
Phoenix is based on the model-view-controller (MVC) architectural pattern, and it includes features such as channels (for real-time communication), generators (for code generation), a robust set of libraries for database access, authentication, and more. It is heavily influenced by the Ruby on Rails framework, but it takes advantage of the concurrency and fault-tolerance capabilities of the Erlang virtual machine (VM) to provide fast and reliable performance.</description></item><item><title>Playwright</title><link>https://note.d.foundation/radar/playwright/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/playwright/</guid><description>Description Playwright is a powerful automation library that allows developers to write reliable and maintainable end-to-end tests for web applications. It provides a high-level API for interacting with web pages and automating browser actions, making it easier for developers to write and maintain complex test suites.
What’s better about this method or library One of the key benefits of Playwright is its ability to work with multiple browsers, including Chromium, Firefox, and WebKit.</description></item><item><title>Pnpm</title><link>https://note.d.foundation/radar/pnpm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/pnpm/</guid><description>Description A package manager for JavaScript that aims to improve the performance of the installation process and reduce disk space usage. It uses a unique approach to store dependencies in a shared store, rather than installing them multiple times for different projects. pnpm supports features such as multi-registry support, global installation, and zero-disk installations.
pnpm&amp;rsquo;s unique approach to dependency management is based on the concept of a &amp;ldquo;shared store.&amp;rdquo; Instead of installing each dependency separately in each project directory, pnpm creates a single, centralized store where all packages are installed.</description></item><item><title>Progressive Delivery</title><link>https://note.d.foundation/radar/progressive-delivery/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/progressive-delivery/</guid><description>Description Progressive delivery is an advanced software delivery approach that allows teams to release new features gradually and safely. It&amp;rsquo;s a step beyond continuous delivery and uses techniques such as canary releases, feature flags, and A/B testing to reduce the risk of introducing bugs or causing downtime. With progressive delivery, teams can test features in production with a small subset of users before rolling them out to the entire user base.</description></item><item><title>Prometheus</title><link>https://note.d.foundation/radar/prometheus/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/prometheus/</guid><description>Description → Write a quick summary about what the technology entails and covers.
What’s better about this method or library ?
What can we do with it ?
How should we adopt it ?</description></item><item><title>Prompt Engineering</title><link>https://note.d.foundation/radar/prompt-engineering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/prompt-engineering/</guid><description>Description Prompt engineering is a cutting-edge field in the realm of generative AI, focusing on maximizing the effectiveness of large language models (LLMs) like ChatGPT. This involves crafting precise and carefully structured prompts to guide AI responses, in a way that aligns machine behavior with human intent. The aim is to optimize AI-generated outputs, making them more human-like and contextually accurate. It&amp;rsquo;s a multidisciplinary role that doesn&amp;rsquo;t strictly require a technical background, encouraging a diverse set of skills including communication, subject matter expertise, language proficiency, critical thinking, and creativity.</description></item><item><title>Qwik</title><link>https://note.d.foundation/radar/qwik/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/qwik/</guid><description>Description → Write a quick summary about what the technology entails and covers.
What’s better about this method or library ?
What can we do with it ?
How should we adopt it ?</description></item><item><title>Radix Ui</title><link>https://note.d.foundation/radar/radix-ui/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/radix-ui/</guid><description>Description Radix UI is a modular and accessible library of pre-built components and utilities for building user interfaces. It offers a collection of UI primitives, including buttons, menus, modals, popovers, and more, that are designed to meet the highest accessibility standards and be highly responsive. Radix UI components are also highly composable, meaning that developers can easily customize and extend them to meet their specific needs.
What’s better about this method or library One of the benefits of Radix UI is that it works well with other libraries like TailwindCSS.</description></item><item><title>React</title><link>https://note.d.foundation/radar/react/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/react/</guid><description>Description → Write a quick summary about what the technology entails and covers.
What’s better about this method or library ?
What can we do with it ?
How should we adopt it ?</description></item><item><title>React Hook Form</title><link>https://note.d.foundation/radar/react-hook-form/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/react-hook-form/</guid><description>Description React Hook Form is a lightweight library for building forms in React applications. It provides a simple and intuitive API for handling form inputs and validation, and it is designed to be flexible and extensible. React Hook Form is built on top of React hooks, which allows for easy integration with existing React projects.
What’s better about this method or library React Hook Form provides a number of benefits over traditional form management libraries.</description></item><item><title>React Llm</title><link>https://note.d.foundation/radar/react-llm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/react-llm/</guid><description>Description → Write a quick summary about what the technology entails and covers.
What’s better about this method or library ?
What can we do with it ?
How should we adopt it ?</description></item><item><title>React Native</title><link>https://note.d.foundation/radar/react-native/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/react-native/</guid><description>Description React Native is an open-source framework developed by Facebook for building mobile applications using the React library. It allows developers to use React to build mobile apps for iOS, Android, and other platforms, using a single codebase.
What’s better about this method or library With React Native, developers can use a combination of JavaScript and native platform components to create high-quality, native mobile apps that have a look and feel similar to apps built using traditional native development tools.</description></item><item><title>React Query</title><link>https://note.d.foundation/radar/react-query/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/react-query/</guid><description>Description React Query is a powerful library for managing and caching data in React applications. It provides a way to fetch, cache, and update data without the need for complex state management code. React Query also includes features like caching, refetching, pagination, and more. It makes it easy to work with complex data structures and to handle data dependencies between components. With React Query, you can easily manage data in your React applications in a performant and scalable way.</description></item><item><title>React Server Component</title><link>https://note.d.foundation/radar/react-server-component/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/react-server-component/</guid><description>Description React Server Components (RSCs) offer the flexibility to decide where to render components based on their purpose, diverging from the client-side rendering approach of Single-Page Applications. By breaking down the page into smaller components, it becomes evident that many components are non-interactive and can be rendered on the server as Server Components. This can improve performance, reduce bundle size and also improve the initial page loading time.
What’s better about this method or library RSCs offer several advantages over traditional methods of handling server-side rendering in React applications.</description></item><item><title>React Testing Library</title><link>https://note.d.foundation/radar/react-testing-library/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/react-testing-library/</guid><description>Description React Testing Library is an open-source JavaScript testing utility for React applications. It provides a way to write tests that closely resemble how users interact with the application, allowing developers to test their code in a more realistic environment. React Testing Library is designed to be easy to use and is built on top of the popular testing library Jest.
What’s better about this method or library React Testing Library provides a more user-centric approach to testing, focusing on how users interact with the application rather than internal implementation details.</description></item><item><title>Remix</title><link>https://note.d.foundation/radar/remix/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/remix/</guid><description>Description Remix is a full stack web framework that lets you focus on the user interface and work back through web standards to deliver a fast, slick, and resilient user experience.
What’s better about this method or library ?
What can we do with it ?
How should we adopt it ?</description></item><item><title>Replayio</title><link>https://note.d.foundation/radar/replayio/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/replayio/</guid><description/></item><item><title>Rust</title><link>https://note.d.foundation/radar/rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/rust/</guid><description/></item><item><title>Selenium</title><link>https://note.d.foundation/radar/selenium/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/selenium/</guid><description>Description Selenium framework is an automated testing tool used to perform functional testing on web applications. It is an open-source framework that allows testers to write scripts in various programming languages like Java, Python, C#, etc. Selenium offers a range of features that help testers design and execute tests with ease. Some of the key features include cross-browser testing, parallel testing, and support for multiple platforms. Additionally, Selenium offers integration with various tools like Jenkins and Git, enabling testers to leverage the benefits of Continuous Integration and Continuous Deployment practices.</description></item><item><title>Semantic Release Auto Release</title><link>https://note.d.foundation/radar/semantic-release-auto-release/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/semantic-release-auto-release/</guid><description> Description semantic-release plays the same role with agile release train concept in order to continously release small set of features in every few days or a week
Timeline (2020-01-01) Adopted</description></item><item><title>Sentry</title><link>https://note.d.foundation/radar/sentry/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/sentry/</guid><description>Description → Write a quick summary about what the technology entails and covers.
What’s better about this method or library ?
What can we do with it ?
How should we adopt it ?</description></item><item><title>Serverlessq</title><link>https://note.d.foundation/radar/serverlessq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/serverlessq/</guid><description>https://www.serverlessq.com/</description></item><item><title>Solidity</title><link>https://note.d.foundation/radar/solidity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/solidity/</guid><description/></item><item><title>Solidjs</title><link>https://note.d.foundation/radar/solidjs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/solidjs/</guid><description>Description SolidJS is a lightweight and reactive JavaScript library for building user interfaces. It is designed to be easy to use, with a simple and intuitive API that enables developers to build complex user interfaces quickly and efficiently. SolidJS uses a reactive programming model, which allows for efficient updates and ensures that user interfaces remain responsive and fast, even as data changes.
What’s better about this method or library ?</description></item><item><title>Stern</title><link>https://note.d.foundation/radar/stern/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/stern/</guid><description/></item><item><title>Svelte</title><link>https://note.d.foundation/radar/svelte/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/svelte/</guid><description>Description Svelte is a modern front-end JavaScript framework that allows developers to build reactive web applications using a simple and concise syntax. It provides a range of powerful features, such as declarative state management, reusable components, and efficient DOM updates, that make it easy to build fast and responsive user interfaces.
What’s better about this library One of the key benefits of Svelte is its approach to building web applications.</description></item><item><title>Swagger</title><link>https://note.d.foundation/radar/swagger/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/swagger/</guid><description>Description Swagger is an open-source software framework that helps developers design, build, document, and consume RESTful web services. It provides a set of tools that enable developers to define, document, and test APIs using a standardized, machine-readable format.
What’s better about this method or library One of the key benefits of Swagger is its ability to simplify API development and documentation. With Swagger, developers can define APIs using a standardized format that can be easily understood and consumed by both humans and machines.</description></item><item><title>Swift</title><link>https://note.d.foundation/radar/swift/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/swift/</guid><description/></item><item><title>Swift Ui</title><link>https://note.d.foundation/radar/swift-ui/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/swift-ui/</guid><description>Description Apple has taken a big step forward with their new SwiftUI framework for implementing user interfaces on the macOS and iOS platforms. We like that SwiftUI moves beyond the somewhat kludgy relationship between Interface Builder and Xcode and adopts a coherent, declarative and code-centric approach. You can now view your code and the resulting visual interface side by side in Xcode 11, making for a much better developer experience</description></item><item><title>Swr</title><link>https://note.d.foundation/radar/swr/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/swr/</guid><description>Description SWR (Stale-While-Revalidate) is a client-side caching library that can be used with popular front-end frameworks like React and Vue.js. It aims to simplify data fetching and caching by providing a standard API for handling asynchronous data and automatically managing cache invalidation.
What’s better about this method or library SWR has a number of advantages over traditional data fetching approaches. One of the key benefits of SWR is that it allows you to fetch data dynamically and only when needed, reducing unnecessary network requests and improving performance.</description></item><item><title>Tailwindcss</title><link>https://note.d.foundation/radar/tailwindcss/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/tailwindcss/</guid><description>Description Tailwind CSS is a popular, utility-first CSS framework that provides pre-defined classes for common styles and design patterns. It allows developers to rapidly build custom user interfaces without having to write custom CSS.
What’s better about this method or library TailwindCSS is different from traditional CSS frameworks like Bootstrap or Foundation, which provide pre-built components and a pre-defined design system. Instead, TailwindCSS provides a set of building blocks in the form of utility classes that can be composed to create custom designs without the need for writing custom CSS.</description></item><item><title>Tauri</title><link>https://note.d.foundation/radar/tauri/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/tauri/</guid><description/></item><item><title>Team Topologies</title><link>https://note.d.foundation/radar/team-topologies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/team-topologies/</guid><description>Description Many organizations experience problems with software delivery because they have an unhelpful model of what software development is really about. An obsession with “feature delivery” ignores human-related and team-related dynamics inherent in modern software development, leading to disengagement from staff, especially when there are high cognitive loads.
The Team Topologies pattern enables teams to address all these points by establishing a team-first approach to software delivery based on four fundamental team types, three patterns of interaction between teams, and ways of turning difficulties in delivery into signals for the self-steering organization.</description></item><item><title>Timescaledb</title><link>https://note.d.foundation/radar/timescaledb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timescaledb/</guid><description>Description TimescaleDB is an open-source relational database for time-series data. It is implemented as an extension to PostgreSQL, which means it runs within a PostgreSQL instance. TimescaleDB uses full SQL and is just as easy to use as a traditional relational database, yet scales in ways previously reserved for NoSQL databases. It has two main design elements: hypertables and chunks. Hypertables are PostgreSQL tables that can be queried with standard SQL commands, while chunks are used to store data in a more efficient way.</description></item><item><title>Tla</title><link>https://note.d.foundation/radar/tla/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/tla/</guid><description/></item><item><title>Trunk Based Development</title><link>https://note.d.foundation/radar/trunk-based-development/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/trunk-based-development/</guid><description>Description Trunk-based development (TBD) is a software development approach where developers continuously merge every new feature, bug fix, or code change into a central branch in the version control system, typically referred to as the &amp;ldquo;trunk&amp;rdquo;. This practice enables continuous integration and delivery, as it encourages frequent commits to the trunk and ensures the codebase is always releasable. By allowing all developers to commit to the trunk at least once every 24 hours, TBD creates a collaborative environment that enables teams to deliver high-quality code faster and with more reliability</description></item><item><title>Turborepo</title><link>https://note.d.foundation/radar/turborepo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/turborepo/</guid><description>Description Turborepo is an intelligent build system optimized for JavaScript and TypeScript codebases. It’s a tool that provides a fast and scalable way to manage monorepos. Turborepo uses advanced caching techniques and incremental builds to speed up the development process and reduce build times.
What’s better about this method or library Speed: Turborepo uses advanced caching techniques and incremental builds to speed up the development process and reduce build times.</description></item><item><title>Type Safe Client Server</title><link>https://note.d.foundation/radar/type-safe-client-server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/type-safe-client-server/</guid><description>Description Developers working on Javascript Applications often face the challenge of enforcing type safety between the client and server. One effective solution is to automatically generate an OpenAPI Spec file from server code. This can then be used with the OpenAPI generator to produce a client-side library for making typesafe API calls to the backend. Our existing workflow has adopted the typesafe approach using Swagger for API documentation. We aim to upgrade this approach by automating the generation of API methods.</description></item><item><title>Typescript</title><link>https://note.d.foundation/radar/typescript/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/typescript/</guid><description>Description TypeScript is a superset of JavaScript that adds static type checking and other features to the language. It is rapidly gaining popularity among developers, particularly those working on large, complex projects.
What’s better about this method or library One of the key advantages of TypeScript is its ability to catch errors at compile time rather than runtime. This can significantly reduce the number of bugs and errors in a codebase, particularly in large, complex projects.</description></item><item><title>Ui Documentation</title><link>https://note.d.foundation/radar/ui-documentation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/ui-documentation/</guid><description>Description A UI document is a comprehensive documentation of the design system and UI components used in a web application or website. It provides a clear understanding of the design guidelines, interaction patterns, and visual styles used throughout the application. Tools like Storybook or MDX are commonly used to document design systems and UI components.
What’s better about this method or library One of the biggest advantages of using tools like Storybook or MDX for UI documentation is that they provide an interactive and visual way to showcase UI components and design patterns.</description></item><item><title>Uno Css</title><link>https://note.d.foundation/radar/uno-css/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/uno-css/</guid><description>Description UnoCSS is an atomic-CSS engine instead of a framework. Everything is designed with flexibility and performance in mind. There are no core utilities in UnoCSS, all functionalities are provided via presets.
What’s better about this method or library On-demand CSS engine (similar to Tailwind JIT) Easy setup &amp;amp; usage: While fully customizable, UnoCSS ships with default presets that cover some popular utilities-first frameworks (Tailwind, Boostrap, etc.) Useful features: Attributify Pure CSS icons Variant grouping … Improved performance through multiple optimization: No Parsing, No Abstract Syntax Tree (AST) Single pass - No pre-scanning or file io What can we do with it Pretty much what TailwindCSS can do, but a bit faster.</description></item><item><title>Upptime</title><link>https://note.d.foundation/radar/upptime/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/upptime/</guid><description> Description Timeline (2021-01-01) Adopted: We tried out CState as our monitoring service, but CState requires low level setup at infrastructure level and therefore not suitable for our bootstrapping kit. Upptime, on the other hand, only requires a simple Github repository and a config file to get it started. We gave Upptime a twist, and rolled out our version at stt.daf.ug. Adopt in 2021</description></item><item><title>Urbox Backend Api</title><link>https://note.d.foundation/radar/timeline/urbox-backend-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/timeline/urbox-backend-api/</guid><description/></item><item><title>V Model</title><link>https://note.d.foundation/radar/v-model/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/v-model/</guid><description>Description The V Model is a software development process model that describes the relationship between different stages in the software development process and their corresponding testing phases. The model is shaped like a &amp;ldquo;V,&amp;rdquo; with the left-hand side of the V representing the development process and the right-hand side representing the testing process.
What’s better about this method or library One of the key advantages of the V Model is that it emphasizes the importance of testing throughout the development process.</description></item><item><title>Vector Database</title><link>https://note.d.foundation/radar/vector-database/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/vector-database/</guid><description>Description A Vector Database represents data in a vector format, enabling quick search for similar data points within the database. This technology simplifies tasks like semantic search, similarity search for images and audio, record matching, anomaly detection, among others, by providing a means to find related pieces of data efficiently. The method really shines when applied to use cases like natural language processing (NLP), which are core to large language models.</description></item><item><title>Vercel</title><link>https://note.d.foundation/radar/vercel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/vercel/</guid><description>Description Vercel is a cloud platform for static and serverless websites and applications. It allows developers to deploy and host their applications with ease, providing a streamlined development experience and fast deployment times.
What’s better about this method or library One of the biggest advantages of Vercel is its simplicity. The platform offers an easy-to-use interface that makes it simple for developers to deploy their applications quickly and efficiently. Vercel also supports a wide range of programming languages and frameworks, including Next.</description></item><item><title>Vitejs</title><link>https://note.d.foundation/radar/vitejs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/vitejs/</guid><description>Description ViteJS is a build tool and development server that is designed to provide fast and efficient development workflows for modern web applications. It uses a unique approach to building and bundling applications, called &amp;ldquo;build on demand&amp;rdquo;, that allows developers to build and test their applications quickly and efficiently.
What’s better about this method or library One of the key benefits of ViteJS is its &amp;ldquo;build on demand&amp;rdquo; approach to building and bundling applications.</description></item><item><title>Volta</title><link>https://note.d.foundation/radar/volta/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/volta/</guid><description>Description During our work with Javascript, each project comes with different node versions. Usually, managing these versions relies mostly on nvm, requiring developers to run their CLI every time switching between projects manually. It&amp;rsquo;s a waste of time and can quickly cause errors. Volta is a hassle-free approach to manage the CLIs. In short, it detects the node versions in the JSON package, unifies them into one place, and automatically switch them as developers change their projects.</description></item><item><title>Wasm</title><link>https://note.d.foundation/radar/wasm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/wasm/</guid><description>Description WebAssembly (WASM) is a low-level binary format that serves as a virtual machine for executing code on the web. It is a portable, secure, and efficient format that can be used to run code in web browsers and other environments.
WebAssembly was designed to address some of the limitations of traditional web technologies, such as JavaScript. Unlike JavaScript, which is an interpreted language, WebAssembly code is compiled to a binary format that can be executed directly by the browser or other environments, providing faster performance.</description></item><item><title>Webdriverio</title><link>https://note.d.foundation/radar/webdriverio/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/webdriverio/</guid><description>Description WebDriverIO is a popular open-source automation testing framework that uses the WebDriver protocol to automate web-based applications. It provides an easy-to-use API and supports multiple programming languages such as JavaScript, TypeScript, and Java. It integrates well with popular testing frameworks such as Mocha, Jasmine, and Cucumber.
What’s better about this method or library Simplified Syntax: WebDriverIO has a much cleaner syntax that makes test cases much easier to write.</description></item><item><title>Webflow</title><link>https://note.d.foundation/radar/webflow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/webflow/</guid><description> Description At some point, we figure the development phase might take more time and resources than we need. Therefore, a no-code platform is what can resolve the issue. Webflow removes the usual misunderstanding between designers and developers - enables them to convert stunning designs into production without any coding techniques. Trial in 2021
Timeline (2021-01-01) Trial</description></item><item><title>Yup</title><link>https://note.d.foundation/radar/yup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/yup/</guid><description>Description Yup is a JavaScript schema validation library that is designed to be simple, efficient, and easy to use. It provides a way to validate data against a set of predefined rules, making it easier to catch errors and ensure data consistency across an application. Yup is lightweight and can be used in both front-end and back-end environments.
What’s better about this method or library Yup is designed to be very flexible and customizable, with support for complex data structures and custom validation rules.</description></item><item><title>Zod</title><link>https://note.d.foundation/radar/zod/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/zod/</guid><description>Description Zod is a TypeScript-first schema declaration and validation library. I&amp;rsquo;m using the term &amp;ldquo;schema&amp;rdquo; to broadly refer to any data type, from a simple string to a complex nested object.
Zod is designed to be as developer-friendly as possible. The goal is to eliminate duplicative type declarations. With Zod, you declare a validator once and Zod will automatically infer the static TypeScript type. It&amp;rsquo;s easy to compose simpler types into complex data structures.</description></item><item><title>Zustand</title><link>https://note.d.foundation/radar/zustand/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>han@d.foundation (Han Ngo)</author><guid>https://note.d.foundation/radar/zustand/</guid><description>Description A small, fast and scalable bearbones state-management solution using simplified flux principles. Has a comfy API based on hooks, isn&amp;rsquo;t boilerplatey or opinionated.
What’s better about this method or library It’s one of the smallest state management library. It’s 100 percent unopinionated. It’s not only for React. For example, we can combine the state of different applications no matter what framework they use (micro frontends). It can deal with common pitfalls, like the dreaded zombie child problem, react concurrency, and context loss.</description></item></channel></rss>